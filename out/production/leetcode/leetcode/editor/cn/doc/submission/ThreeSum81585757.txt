class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        if (nums == null || nums.length < 3) return res;

        Arrays.sort(nums);
        for (int i = 0; i < nums.length; i++) {
            int num = nums[i];
            if (num > 0) return res;
            if (i > 0 && nums[i] == nums[i - 1]) continue;
            int left = i + 1, right = nums.length - 1;
            while (left < right){
                int cur = num + nums[left] + nums[right];
                if (cur == 0){
                    List<Integer> temp = new ArrayList<>();
                    temp.add(num);
                    temp.add(nums[left]);
                    temp.add(nums[right]);
                    res.add(temp);

                    while (left < right && nums[right] == nums[right - 1]) right -= 1;
                    while (left < right && nums[left] == nums[left + 1]) left += 1;
                    left += 1;
                    right -= 1;
                }
                else if (cur > 0){
                    right -= 1;
                }
                else left += 1;
            }
        }
        return res;
    }
}

//runtime:22 ms
//memory:42.9 MB
